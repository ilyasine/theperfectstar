{"version":3,"sources":["webpack://vimeography-pro-admin/./src/components/GalleryEditor/ProSettings/ProSettings.tsx"],"names":["Setting","children","className","SettingLabel","props","ctx","galleryCtx","handleUpdate","payload","dispatch","type","value","state","sort","onChange","e","target","checked","direction","videos_per_page","parseInt","enable_search","enable_playlist","allow_downloads"],"mappings":"yKAOMA,EAAU,SAAC,G,IAAEC,EAAQ,WAAO,8BAAKC,UAAU,WAAWD,IAEtDE,EAAe,SAAC,G,IAAEF,EAAQ,WAAO,OACrC,uBAAKC,UAAU,sDACZD,IAyIL,QArIoB,SAACG,GACnB,IAAMC,EAAMD,EAAME,WAEZC,EAAe,SAACC,GACpBH,EAAII,SAAS,CACXC,KAAM,qBACNF,QAAO,KAIX,OACE,gCACE,uBAAKN,UAAU,UACb,gBAACF,EAAO,KACN,gBAACG,EAAY,uBAEb,0BACEQ,MAAON,EAAIO,MAAMC,KACjBC,SAAU,SAACC,GAAM,OAAAR,EAAa,CAAEM,KAAME,EAAEC,OAAOL,UAE/C,0BAAQA,MAAM,QAAM,cACpB,0BAAQA,MAAM,SAAO,mBACrB,0BAAQA,MAAM,YAAU,sBACxB,0BAAQA,MAAM,SAAO,mBACrB,0BAAQA,MAAM,gBAAc,kBAC5B,0BAAQA,MAAM,YAAU,YACxB,0BAAQA,MAAM,WAAS,4BAGP,YAAnBN,EAAIO,MAAMC,MACT,gBAACb,EAAO,KACN,yBAAOE,UAAU,0BACf,yBACEQ,KAAK,WACLO,QAAiC,QAAxBZ,EAAIO,MAAMM,UACnBhB,UAAU,gCACVY,SAAU,SAACC,GACT,OAAAR,EAAa,CACXW,UAAWH,EAAEC,OAAOC,QAAU,MAAQ,YAI5C,2BACE,gBAACd,EAAY,8BAKrB,gBAACH,EAAO,KACN,gBAACG,EAAY,wBACb,yBACEO,KAAK,SACLC,MAAON,EAAIO,MAAMO,gBACjBL,SAAU,SAACC,GACT,OAAAR,EAAa,CAAEY,gBAAiBC,SAASL,EAAEC,OAAOL,UAEpDT,UAAU,YAEZ,qBAAGA,UAAU,+BAA6B,oGAM5C,gBAACF,EAAO,KACN,yBAAOE,UAAU,0BACf,yBACEQ,KAAK,WACLO,QAASZ,EAAIO,MAAMS,cACnBnB,UAAU,gCACVY,SAAU,SAACC,GACT,OAAAR,EAAa,CAAEc,cAAeN,EAAEC,OAAOC,aAG3C,2BACE,gBAACd,EAAY,yBACb,qBAAGD,UAAU,+BAA6B,iHAQhD,gBAACF,EAAO,KACN,yBAAOE,UAAU,0BACf,yBACEQ,KAAK,WACLO,QAASZ,EAAIO,MAAMU,gBACnBpB,UAAU,gCACVY,SAAU,SAACC,GACT,OAAAR,EAAa,CAAEe,gBAAiBP,EAAEC,OAAOC,aAG7C,2BACE,gBAACd,EAAY,4BACb,qBAAGD,UAAU,+BAA6B,gIAQhD,gBAACF,EAAO,KACN,yBAAOE,UAAU,0BACf,yBACEQ,KAAK,WACLO,QAASZ,EAAIO,MAAMW,gBACnBrB,UAAU,gCACVY,SAAU,SAACC,GACT,OAAAR,EAAa,CAAEgB,gBAAiBR,EAAEC,OAAOC,aAG7C,2BACE,gBAACd,EAAY,4BACb,qBAAGD,UAAU,uCAAqC,qHAIlD,qBAAGA,UAAU,+BAA6B","file":"137.chunk.86d1d89da181e4d57609.js","sourcesContent":["import * as React from \"react\";\n\ntype ProSettingsProps = {\n  isProPanel: boolean;\n  galleryCtx: null;\n};\n\nconst Setting = ({ children }) => <div className=\"vm-mb-4\">{children}</div>;\n\nconst SettingLabel = ({ children }) => (\n  <div className=\"vm-font-semibold vm-text-gray-700 vm-block vm-mb-1\">\n    {children}\n  </div>\n);\n\nconst ProSettings = (props: ProSettingsProps) => {\n  const ctx = props.galleryCtx;\n\n  const handleUpdate = (payload) => {\n    ctx.dispatch({\n      type: `EDIT_GALLERY_STATE`,\n      payload,\n    });\n  };\n\n  return (\n    <>\n      <div className=\"vm-p-4\">\n        <Setting>\n          <SettingLabel>Sort videos by</SettingLabel>\n          {/* Specifies how frequently Vimeography should check your Vimeo source for any new videos that may have been added. */}\n          <select\n            value={ctx.state.sort}\n            onChange={(e) => handleUpdate({ sort: e.target.value })}\n          >\n            <option value=\"date\">date added</option>\n            <option value=\"likes\">number of likes</option>\n            <option value=\"comments\">number of comments</option>\n            <option value=\"plays\">number of plays</option>\n            <option value=\"alphabetical\">alphabetically</option>\n            <option value=\"duration\">duration</option>\n            <option value=\"default\">use my sort from Vimeo</option>\n          </select>\n        </Setting>\n        {ctx.state.sort !== \"default\" && (\n          <Setting>\n            <label className=\"vm-flex vm-items-start\">\n              <input\n                type=\"checkbox\"\n                checked={ctx.state.direction === `asc`}\n                className=\"vm-transform vm-translate-y-1\"\n                onChange={(e) =>\n                  handleUpdate({\n                    direction: e.target.checked ? `asc` : `desc`,\n                  })\n                }\n              />\n              <div>\n                <SettingLabel>Reverse sort order</SettingLabel>\n              </div>\n            </label>\n          </Setting>\n        )}\n        <Setting>\n          <SettingLabel>Videos per page</SettingLabel>\n          <input\n            type=\"number\"\n            value={ctx.state.videos_per_page}\n            onChange={(e) =>\n              handleUpdate({ videos_per_page: parseInt(e.target.value) })\n            }\n            className=\"vm-mb-2\"\n          />\n          <p className=\"vm-text-xs vm-text-gray-400\">\n            Sets the number of videos that should show up on each gallery page.\n            Max is 100 videos per page.\n          </p>\n        </Setting>\n\n        <Setting>\n          <label className=\"vm-flex vm-items-start\">\n            <input\n              type=\"checkbox\"\n              checked={ctx.state.enable_search}\n              className=\"vm-transform vm-translate-y-1\"\n              onChange={(e) =>\n                handleUpdate({ enable_search: e.target.checked })\n              }\n            />\n            <div>\n              <SettingLabel>Enable searching</SettingLabel>\n              <p className=\"vm-text-xs vm-text-gray-400\">\n                When checked, allows your viewers to search this gallery for a\n                specific video by its title or description.\n              </p>\n            </div>\n          </label>\n        </Setting>\n\n        <Setting>\n          <label className=\"vm-flex vm-items-start\">\n            <input\n              type=\"checkbox\"\n              checked={ctx.state.enable_playlist}\n              className=\"vm-transform vm-translate-y-1\"\n              onChange={(e) =>\n                handleUpdate({ enable_playlist: e.target.checked })\n              }\n            />\n            <div>\n              <SettingLabel>Enable auto-advance</SettingLabel>\n              <p className=\"vm-text-xs vm-text-gray-400\">\n                When checked, viewers will automatically be shown the next\n                queued video in your gallery as soon as they complete a video.\n              </p>\n            </div>\n          </label>\n        </Setting>\n\n        <Setting>\n          <label className=\"vm-flex vm-items-start\">\n            <input\n              type=\"checkbox\"\n              checked={ctx.state.allow_downloads}\n              className=\"vm-transform vm-translate-y-1\"\n              onChange={(e) =>\n                handleUpdate({ allow_downloads: e.target.checked })\n              }\n            />\n            <div>\n              <SettingLabel>Show download links</SettingLabel>\n              <p className=\"vm-text-xs vm-text-gray-400 vm-mb-2\">\n                You can only allow downloads if the videos are coming from your\n                own Vimeo account and you are a Vimeo Pro member.\n              </p>\n              <p className=\"vm-text-xs vm-text-gray-400\">\n                Download links expire after 3 hours, so make sure to set your\n                video refresh settings to every hour to prevent serving expired\n                download links to your viewers.\n              </p>\n            </div>\n          </label>\n        </Setting>\n      </div>\n    </>\n  );\n};\n\nexport default ProSettings;\n"],"sourceRoot":""}